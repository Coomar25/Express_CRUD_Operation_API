// Tala ko code chai simplified version hooooo

export const insertUserDetails = (req, res) => {
    const { name, email, contact } = req.body;

    if (!name || !email || !contact) {
        return res.status(400).send({ error: "Please provide all required field" });
    }

    const sqlInsert = "INSERT INTO contact_db (name, email, contact) VALUES (?, ?, ?)";
    db.query(sqlInsert, [name, email, contact], (error, result) => {
        if (error) {
            res.status(500).send({ error: "An error occured while insertin the users data" });
        } else {
            res.status(200).send(result);
        }

    })
}



export const insertUserDetails = async (req, res) => {
    const { name, email, contact } = req.body;

    // Perform server-side validation
    if (!name || !email || !contact) {
        return res.status(400).send({ error: "Please provide all required fields." });
    }

    const sqlInsert = "INSERT INTO contact_db (name, email, contact) VALUES (?, ?, ?)";
    try {
        const result = await new Promise((resolve, reject) => {
            db.query(sqlInsert, [name, email, contact], (error, result) => {
                if (error) {
                    reject(error);
                } else {
                    resolve(result);
                }
            });
        });
        res.status(200).send(result);
    } catch (error) {
        res.status(500).send({ error: "An error occurred while inserting the user's data." });
    }
};



export const insertUserDetails = async (req, res) => {
    const { name, email, contact } = req.body;

    // Perform server-side validation
    if (!name || !email || !contact) {
        return res.status(400).send({ error: "Please provide all required fields." });
    }

    const sqlInsert = "INSERT INTO contact_db (name, email, contact) VALUES (?, ?, ?)";
    try {
        const result = await db.promise().execute(sqlInsert, [name, email, contact]);
        res.status(200).send(result);
    } catch (error) {
        res.status(500).send({ error: "An error occurred while inserting the user's data." });
    }
};




===============================simple delete action
export const deleteUserDetails = (req, res) => {
    const id = req.params.id;

    if (!id) {
        return res.status(400).send({ error: "Please provide the ID parameter" });
    }
    const sqlDelete = "DELETE FROM contact_db WHERE id = ?";
    db.query(sqlDelete, [id], (error) => {
        if (error) {
            console.error("An error occurred while deleting the user's data:", error);
            res.status(500).send({ error: "An error occurred while deleting the user's data" });
        } else {
            res.status(200).send("User details deleted successfully");
        }
    });
};